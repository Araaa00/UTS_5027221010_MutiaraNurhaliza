# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import financial_tracking_pb2 as financial__tracking__pb2


class FinancialTrackerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SignUp = channel.unary_unary(
                '/financialtracking.FinancialTracker/SignUp',
                request_serializer=financial__tracking__pb2.User.SerializeToString,
                response_deserializer=financial__tracking__pb2.User.FromString,
                )
        self.Login = channel.unary_unary(
                '/financialtracking.FinancialTracker/Login',
                request_serializer=financial__tracking__pb2.User.SerializeToString,
                response_deserializer=financial__tracking__pb2.User.FromString,
                )
        self.AddTransaction = channel.unary_unary(
                '/financialtracking.FinancialTracker/AddTransaction',
                request_serializer=financial__tracking__pb2.Transaction.SerializeToString,
                response_deserializer=financial__tracking__pb2.Transaction.FromString,
                )
        self.ReadTransaction = channel.unary_unary(
                '/financialtracking.FinancialTracker/ReadTransaction',
                request_serializer=financial__tracking__pb2.TransactionId.SerializeToString,
                response_deserializer=financial__tracking__pb2.Transaction.FromString,
                )
        self.UpdateTransaction = channel.unary_unary(
                '/financialtracking.FinancialTracker/UpdateTransaction',
                request_serializer=financial__tracking__pb2.Transaction.SerializeToString,
                response_deserializer=financial__tracking__pb2.Transaction.FromString,
                )
        self.DeleteTransaction = channel.unary_unary(
                '/financialtracking.FinancialTracker/DeleteTransaction',
                request_serializer=financial__tracking__pb2.TransactionId.SerializeToString,
                response_deserializer=financial__tracking__pb2.Transaction.FromString,
                )
        self.ReadAllTransactions = channel.unary_stream(
                '/financialtracking.FinancialTracker/ReadAllTransactions',
                request_serializer=financial__tracking__pb2.Empty.SerializeToString,
                response_deserializer=financial__tracking__pb2.Transaction.FromString,
                )


class FinancialTrackerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SignUp(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Login(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddTransaction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadTransaction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateTransaction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteTransaction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadAllTransactions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FinancialTrackerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SignUp': grpc.unary_unary_rpc_method_handler(
                    servicer.SignUp,
                    request_deserializer=financial__tracking__pb2.User.FromString,
                    response_serializer=financial__tracking__pb2.User.SerializeToString,
            ),
            'Login': grpc.unary_unary_rpc_method_handler(
                    servicer.Login,
                    request_deserializer=financial__tracking__pb2.User.FromString,
                    response_serializer=financial__tracking__pb2.User.SerializeToString,
            ),
            'AddTransaction': grpc.unary_unary_rpc_method_handler(
                    servicer.AddTransaction,
                    request_deserializer=financial__tracking__pb2.Transaction.FromString,
                    response_serializer=financial__tracking__pb2.Transaction.SerializeToString,
            ),
            'ReadTransaction': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadTransaction,
                    request_deserializer=financial__tracking__pb2.TransactionId.FromString,
                    response_serializer=financial__tracking__pb2.Transaction.SerializeToString,
            ),
            'UpdateTransaction': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateTransaction,
                    request_deserializer=financial__tracking__pb2.Transaction.FromString,
                    response_serializer=financial__tracking__pb2.Transaction.SerializeToString,
            ),
            'DeleteTransaction': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteTransaction,
                    request_deserializer=financial__tracking__pb2.TransactionId.FromString,
                    response_serializer=financial__tracking__pb2.Transaction.SerializeToString,
            ),
            'ReadAllTransactions': grpc.unary_stream_rpc_method_handler(
                    servicer.ReadAllTransactions,
                    request_deserializer=financial__tracking__pb2.Empty.FromString,
                    response_serializer=financial__tracking__pb2.Transaction.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'financialtracking.FinancialTracker', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class FinancialTracker(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SignUp(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/financialtracking.FinancialTracker/SignUp',
            financial__tracking__pb2.User.SerializeToString,
            financial__tracking__pb2.User.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Login(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/financialtracking.FinancialTracker/Login',
            financial__tracking__pb2.User.SerializeToString,
            financial__tracking__pb2.User.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddTransaction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/financialtracking.FinancialTracker/AddTransaction',
            financial__tracking__pb2.Transaction.SerializeToString,
            financial__tracking__pb2.Transaction.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReadTransaction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/financialtracking.FinancialTracker/ReadTransaction',
            financial__tracking__pb2.TransactionId.SerializeToString,
            financial__tracking__pb2.Transaction.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateTransaction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/financialtracking.FinancialTracker/UpdateTransaction',
            financial__tracking__pb2.Transaction.SerializeToString,
            financial__tracking__pb2.Transaction.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteTransaction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/financialtracking.FinancialTracker/DeleteTransaction',
            financial__tracking__pb2.TransactionId.SerializeToString,
            financial__tracking__pb2.Transaction.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReadAllTransactions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/financialtracking.FinancialTracker/ReadAllTransactions',
            financial__tracking__pb2.Empty.SerializeToString,
            financial__tracking__pb2.Transaction.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
